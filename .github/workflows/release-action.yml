
name: Release New Registrator Controller Version

on:
  push:
    branches: master
    tags:
      - v*
env:
  IMAGE_NAME: registrator-controller

jobs:
  push:
    runs-on: ubuntu-latest
    permissions:
      packages: write
      contents: read

    steps:
      - uses: actions/checkout@v3

      - name: Build image
        run: docker build . --file Dockerfile --tag $IMAGE_NAME --label "runnumber=${GITHUB_RUN_ID}"

      - name: Log in to registry
        run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u $ --password-stdin

      - name: Push image
        run: |
          IMAGE_ID=ghcr.io/${{ github.repository_owner }}/$IMAGE_NAME

          # Change all uppercase to lowercase
          IMAGE_ID=$(echo $IMAGE_ID | tr '[A-Z]' '[a-z]')

          # Strip git ref prefix from version
          VERSION=$(echo "${{ github.ref }}" | sed -e 's,.*/\(.*\),\1,')

          # Strip "v" prefix from tag name
          [[ "${{ github.ref }}" == "refs/tags/"* ]] && VERSION=$(echo $VERSION | sed -e 's/^v//')

          # Use Docker `latest` tag convention
          [ "$VERSION" == "master" ] && VERSION=stage
          echo IMAGE_ID=$IMAGE_ID
          echo VERSION=$VERSION

          echo -e "{\"deploy\":\"$VERSION\",\"commit_sha\":\"${GITHUB_SHA}\"}" > deploy-vars.json

          docker tag $IMAGE_NAME $IMAGE_ID:${GITHUB_SHA}
          docker push $IMAGE_ID:${GITHUB_SHA}

      # - name: Deploy new version
      #   env:
      #     NOMAD_CACERT: operations/admin-ui-ca.crt
      #     NOMAD_TOKEN: ${{ secrets.NOMAD_TOKEN_REGISTRATOR_CONTROLLER_DEPLOY }}
      #     NOMAD_ADDR: ${{ secrets.NOMAD_ADDR }}
      #     CONSUL_CACERT: operations/admin-ui-ca.crt
      #     CONSUL_HTTP_TOKEN: ${{ secrets.CONSUL_HTTP_TOKEN_REGISTRATOR_CONTROLLER_DEPLOY }}
      #     CONSUL_ADDR: ${{ secrets.CONSUL_ADDR }}
      #   run: |
      #     curl -L https://releases.hashicorp.com/levant/0.3.2/levant_0.3.2_linux_amd64.zip -o levant.zip
      #     unzip levant.zip
          
      #     [[ -n $(grep "stage" deploy-vars.json) ]] && ./levant render -var-file="deploy-vars.json" -consul-address=$CONSUL_ADDR -out runtime-job.hcl operations/registrator-controller-stage.hcl
      #     [[ -n $(grep "stage" deploy-vars.json) ]] && ./levant render -var-file="deploy-vars.json" -consul-address=$CONSUL_ADDR -out redis.hcl operations/registrator-controller-stage-redis.hcl
      #     [[ -z $(grep "stage" deploy-vars.json) ]] && ./levant render -var-file="deploy-vars.json" -consul-address=$CONSUL_ADDR -out runtime-job.hcl operations/registrator-controller-live.hcl
      #     [[ -z $(grep "stage" deploy-vars.json) ]] && ./levant render -var-file="deploy-vars.json" -consul-address=$CONSUL_ADDR -out redis.hcl operations/registrator-controller-live-redis.hcl

      #     curl -L https://releases.hashicorp.com/nomad/1.8.3/nomad_1.8.3_linux_amd64.zip -o nomad.zip
      #     unzip nomad.zip
      #     # ./nomad job run redis.hcl # Skip redis deploy until new pacing is on all controllers
      #     ./nomad job run runtime-job.hcl
